@model SignService.Models.UpdateCertificateRequestModel

@{
    ViewData["Title"] = "Create Certificate Request";
}

<h2>View Certificate Request</h2>

<h4>View Certificate Request</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        
        <div>
<textarea cols="100" rows="20" readonly="readonly">
@Model.Csr
</textarea>
        </div>

        <form asp-action="MergeCertificate" asp-antiforgery="true" enctype="multipart/form-data" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Certificate" class="control-label"></label>
                <input asp-for="Certificate" class="form-control" />
                <span asp-validation-for="Certificate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Upload CA Cer" class="btn btn-default"/>
            </div>
            <input asp-for="VaultName" class="hidden"/>
            <input asp-for="CertificateName" class="hidden"/>
            <input asp-for="Csr" class="hidden"/>
        </form>
        <form asp-action="CancelCertificateRequest" asp-antiforgery="true" >
            <input asp-for="VaultName" class="hidden"/>
            <input asp-for="CertificateName" class="hidden"/>
            <div class="form-group">
                <input type="submit" value="Cancel Request" class="btn btn-default"/>
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to Vault Details", "Details", "KeyVault", new { id = Model.VaultName })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
